#!/usr/bin/env -S php -dphar.readonly=0
<?php
define('BUILD_DIR', './build');

$opts = getopt('', ['template:', 'name:', 'package:']);
if (!$opts) {
  die('Usage: bin/build --name="Package name" --package=package' . PHP_EOL);
}

if (!isset($opts['name'])) {
  die('Error: you should pass --name with name of project to build' . PHP_EOL);
}

if (!isset($opts['package'])) {
  die('Error: you should pass --package with binary name to build' . PHP_EOL);
}

$TPL_PATH = realpath(__DIR__ . '/../templates');
$TEMPLATES = glob("$TPL_PATH/*") ?: [];
$template = $opts['template'] ?? null;
if ($template && !in_array($template, array_map('basename', $TEMPLATES))) {
  die('Error: you passed unexisting template to use. Check templates dir for allowed templates' . PHP_EOL);
}

$binFile = BUILD_DIR . '/' . $opts['package'];
$srcDir = BUILD_DIR . '/share/modules/' . $opts['package'];

if (is_dir(BUILD_DIR)) {
  exec('rm -fr ' . BUILD_DIR);
}
mkdir(BUILD_DIR, 0755);
mkdir($srcDir, 0755, true);

// Now add all deps required by composer
// We create new fake vendor and install only no dev packages
// just because there is no way to dump autoload config of non dev-only
shell_exec("cp -r src '$srcDir/src'");
copy('APP_VERSION', $srcDir . '/APP_VERSION');
copy('composer.json', $srcDir . '/composer.json');
copy('composer.lock', $srcDir . '/composer.lock');
shell_exec('cd ' . $srcDir . ' && composer install --prefer-dist --no-dev --optimize-autoloader');
$buildVendorDir = $srcDir . '/vendor';
// Remove tests from vendor dir
shell_exec('find ' . $buildVendorDir . ' -type d -name tests | xargs rm -fr');

$templates = $template ? [$TPL_PATH . '/' . $template] : $TEMPLATES;
echo 'Build for templates: ' . implode(',', array_map(basename(...), $templates)) . PHP_EOL;

foreach ($templates as $template) {
  $content = file_get_contents($template);
  $content = strtr($content, [
    '__NAME__' => $opts['name'],
    '__PACKAGE__' => $opts['package'],
  ]);

  $extension = basename($template);
  $curFile = $binFile . '.' . $extension;
  file_put_contents($curFile, $content);
  chmod($curFile, 0777);
  echo '- ' . $curFile . PHP_EOL;

  // Make identical copy for shell script without extension
  // to make it easier for all things we already have in CI
  if ($extension === 'sh') {
    copy($curFile, $binFile);
    chmod($binFile, 0777);
    echo '- ' . $binFile . PHP_EOL;
  }
}

